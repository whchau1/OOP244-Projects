/***********************************************************************
// OOP244 Workshop #8 p2: reflection
//
// File	reflect.txt
// -----------------------------------------------------------
// Name            Date            Reason
// Wing Ho Chau
// Seneca Email: whchau1@myseneca.ca
// Seneca ID: 150924231
// I have done all the coding by myself and only copied the code that my professor provided to complete my workshops and assignments.
/////////////////////////////////////////////////////////////////
***********************************************************************/
In workshop 8, I have learned something about pure virtual function, abstract base class, and concrete class. A pure function is a function that is declared as "= 0". When a class contains at least one pure virtual function, it will become an abstract base class. In C++, an abstract base class does not require all the functions to be pure virtual. A pure virtual function does not have any implementation, but it forces the derived class must provide the definition. Moreover, abstract base class cannot instantiate. This means it can not be used to create objects. On the other hand, derived could be the concrete class of the abstract base class when the derived class provides a complete implementation for all the pure virtual functions.

In milestone 3, I also did the pure virtual functions and some derived classes to inherit the abstract base class. I learned a new cin method called 'peek()'. It is a method that can read the next character in the input stream, but it does not consume it.