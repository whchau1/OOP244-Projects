/***********************************************************************
// OOP244 Workshop #03 p2: tester program
//
// File	main.cpp
// Version 1.0
// Date: September 28, 2023
// Author: Yosef Ashibani
// Description
//
// Revision History
// -----------------------------------------------------------
// Name            Date            Reason
// Wing Ho Chau
// Seneca Email: whchau1@myseneca.ca
// ID: 150924231
/////////////////////////////////////////////////////////////////
***********************************************************************/
In this workshop, I learned how to create a class type. A class type is familiar to a struct but the members in class type are private by default and members in struct type are public by default. Declaring a data member in private can limit the accessibility to prevent unexpected modification from other objects or client code. Since I cannot access the data member directly in the client code, I also learned another way to access it. It is creating member functions. A member function is declared inside the class. It is a communication link between the client code and the object. I can set the member function to public to let other objects modify the current member through the defined member function. The member functions can let us know what the object can do.
Furthermore, I learned some cout formatting, such as cout.width(), cout.setf(). cout.width can set the width size. cout.setf() can set left justify and right justify. They are flag to manipulate the format with cout. Also, cout has a member function to control the digit of decimals, cout.precision(). Before using it, we have to use cout.setf(ios::fixed) to fix the floating point.